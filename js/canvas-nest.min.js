(function() {
  function getAttributeValue(element, attribute, defaultValue) {
      return element.getAttribute(attribute) || defaultValue;
  }

  function getScriptElements() {
      return document.getElementsByTagName('script');
  }

  function getScriptConfig() {
      var scriptElements = getScriptElements();
      var lastScriptElement = scriptElements[scriptElements.length - 1];
      return {
          length: scriptElements.length,
          zIndex: getAttributeValue(lastScriptElement, 'zIndex', -1),
          opacity: getAttributeValue(lastScriptElement, 'opacity', 0.5),
          color: getAttributeValue(lastScriptElement, 'color', '0,255,0'), //线条颜色
          count: getAttributeValue(lastScriptElement, 'count', 99)
      };
  }

  function setCanvasSize() {
      canvas.width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
      canvas.height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;
  }

  function drawParticles() {
      context.clearRect(0, 0, canvas.width, canvas.height);
      var particles = [mainParticle].concat(allParticles);
      var distance, alpha;

      allParticles.forEach(function(particle) {
          particle.x += particle.xa;
          particle.y += particle.ya;
          particle.xa *= particle.x > canvas.width || particle.x < 0 ? -1 : 1;
          particle.ya *= particle.y > canvas.height || particle.y < 0 ? -1 : 1;
          context.fillRect(particle.x - 0.5, particle.y - 0.5, 1, 1);

          for (var i = 0; i < particles.length; i++) {
              var currentParticle = particles[i];
              if (particle !== currentParticle && currentParticle.x !== null && currentParticle.y !== null) {
                  distance = (particle.x - currentParticle.x) ** 2 + (particle.y - currentParticle.y) ** 2;
                  if (distance < currentParticle.max) {
                      if (currentParticle === mainParticle && distance >= currentParticle.max / 2) {
                          particle.x -= 0.03 * (particle.x - currentParticle.x);
                          particle.y -= 0.03 * (particle.y - currentParticle.y);
                      }
                      alpha = (currentParticle.max - distance) / currentParticle.max;
                      context.beginPath();
                      context.lineWidth = alpha / 2;
                      context.strokeStyle = 'rgba(' + config.color + ',' + (alpha + 0.2) + ')';
                      context.moveTo(particle.x, particle.y);
                      context.lineTo(currentParticle.x, currentParticle.y);
                      context.stroke();
                  }
              }
          }
          particles.splice(particles.indexOf(particle), 1);
      });

      requestAnimationFrame(drawParticles);
  }

  var canvas = document.createElement('canvas');
  var config = getScriptConfig();
  var context = canvas.getContext('2d');
  var mainParticle = { x: null, y: null, max: 20000 };

  canvas.id = 'c_n' + config.length;
  canvas.style.cssText = 'position:fixed;top:0;left:0;z-index:' + config.zIndex + ';opacity:' + config.opacity;
  document.body.appendChild(canvas);

  setCanvasSize();
  window.addEventListener('resize', setCanvasSize);
  window.addEventListener('mousemove', function(event) {
      mainParticle.x = event.clientX;
      mainParticle.y = event.clientY;
  });
  window.addEventListener('mouseout', function() {
      mainParticle.x = null;
      mainParticle.y = null;
  });

  var allParticles = [];
  for (var i = 0; i < config.count; i++) {
      var randomX = Math.random() * canvas.width;
      var randomY = Math.random() * canvas.height;
      var randomXa = 2 * Math.random() - 1;
      var randomYa = 2 * Math.random() - 1;
      allParticles.push({ x: randomX, y: randomY, xa: randomXa, ya: randomYa, max: 6000 });
  }

  setTimeout(function() {
      drawParticles();
  }, 100);
})();
